version: '1.0'

services:
  api-server:
    image: vnc-rm-server                  # Название собранного Docker-образа
    container_name: vnc_rm_server         # Фиксированное имя контейнера
    restart: unless-stopped               # Автоперезапуск при падении
    ports:
      - "8080:8080"                   # Пробрасываем порт (host:container)
    environment:
#       Основные настройки сервера
      - API_SERVER_PORT=8080          # Порт работы API (должен совпадать с ports)
      - METRICS_UPDATE_INTERVAL=60    # Частота сбора метрик (в секундах)
#       Настройки логирования
      - LOG_WHEN=D                    # Ротация логов ежедневно (D - day)
      - LOG_INTERVAL=1                # Интервал ротации (1 день)
      - LOG_COUNT=30                  # Хранить логи за 30 дней
      - TZ=Europe/Moscow            # Часовой пояс
      - PYTHONUNBUFFERED=1          # Для немедленного вывода логов Python
#     Если используется .env
#    env_file:
#      - .env
    volumes:
      - ./vnc-rm-server/data:/app/data           # Данные серверов и логи
#    networks:
#      - vnc-rm-net                 # Подключаем в сеть
#    healthcheck:          # Опциональный healthcheck
#     test: ["CMD", "curl", "-f", "http://localhost:8080/api/servers"]
#     interval: 30s
#     timeout: 10s
#     retries: 3
#networks:
#  vnc-rm-net:                # Изолированная сеть
#    driver: bridge
#volumes:              # Для постоянного хранения (если нужно)
# app-data:
#   driver: local